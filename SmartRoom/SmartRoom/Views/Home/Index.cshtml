@model IEnumerable<SmartRoom.Web.App_Start.Course>
@{
    ViewBag.Title = "Dashboard";
}
@section Scripts
{
    @Scripts.Render("~/Scripts/Personalized/dragDrop.js")
}
@*@if (User.IsInRole("Admin"))
{
    <ul>
        <li>@Html.ActionLink("Classroom Index", "Index", "Courses", new { Area = "Classroom" }, new { })</li>
        <li>@Html.ActionLink("Classroom Create", "Create", "Courses", new { Area = "Classroom" }, new { })</li>
        <li>@Html.ActionLink("Classroom Delete", "Delete", "Courses", new { Area = "Classroom" }, new { })</li>
        <li>@Html.ActionLink("Classroom Edit", "Edit", "Courses", new { Area = "Classroom" }, new { })</li>
        <li>@Html.ActionLink("YouTube Index", "Index", "YouTube", new { Area = "YouTube" }, new { })</li>
        <li>@Html.ActionLink("YouTube Create", "Create", "YouTube", new { Area = "YouTube" }, new { })</li>
        <li>@Html.ActionLink("Syllabus Create", "Create", "Syllabus", new { Area = "Forms" }, new { })</li>
    </ul>}*@
<ul id="sortable">

    @if (Model.Count() > 0)
    {
        foreach (var item in Model)
        {
            <li>
                <a href="@Url.Action("Details", "Courses", new { Area = "Classroom", id = item.Id })">
                    <div class="class-container ui-state-default">
                        @HttpUtility.HtmlDecode(Html.DisplayFor(modelItem => item.Title) + " - " + Html.DisplayFor(modelItem => item.Section))
                        <hr />

                        @{List<SmartRoom.Web.App_Start.Announcement> list = item.Announcements.Where(x => x.PublishOn >= DateTime.Now.AddDays(-1)).OrderBy(x => x.PublishOn).Take(3).ToList();}
                        @for (int i = 0; i < list.Count(); i++)
                        {
                            @Html.DisplayFor(model => list[i].PublishOn); <text> - </text>
                            @Html.DisplayFor(model => list[i].NewsTitle);<br />
                        }
                    </div>
                </a>
            </li>
        }
    }
    @if (User.IsInRole("Teacher") || User.IsInRole("Admin"))
    {
        <li>
            <a href="@Url.Action("Create", "Courses", new { Area = "Classroom" })">
                <div class="class-container">
                    Add Course
                    <hr />
                    <br>
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </div>
                </a>
</li>
    }
    else
    {
        <li>
            <a href="@Url.Action("Enroll", "Courses", new { Area = "Classroom" })">
                <div class="class-container">
                    Enroll in Course
                    <hr />
                    <br>
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </div>
            </a>
        </li>
    }
</ul>