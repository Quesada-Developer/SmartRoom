@model SmartRoom.Web.YoutubeLiveDetail

@{
    ViewBag.Title = "Create";
}
@section scripts{
    @Scripts.Render("~/Scripts/jquery-2.1.3.js")
    @Scripts.Render("~/Scripts/Moment.js")
    @Scripts.Render("~/Scripts/bootstrap.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
        
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>YoutubeLiveDetail</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "CourseId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", String.Empty)
                @Html.ValidationMessageFor(model => model.CourseId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BroadcastTitle, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BroadcastTitle)
                @Html.ValidationMessageFor(model => model.BroadcastTitle)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BroadcastDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BroadcastDescription)
                @Html.ValidationMessageFor(model => model.BroadcastDescription)
            </div>
        </div>

        <div class="form-group" >
            @Html.LabelFor(model => model.BroadcastScheduledStartTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BroadcastScheduledStartTime)
                @Html.ValidationMessageFor(model => model.BroadcastScheduledStartTime)
            </div>
        </div>

        <div class="form-group" >
            @Html.LabelFor(model => model.BroadcastScheduledEndTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="datetimepicker2">
                @Html.EditorFor(model => model.BroadcastScheduledEndTime)
                @Html.ValidationMessageFor(model => model.BroadcastScheduledEndTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BroadcastStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BroadcastStatus, new SelectList(
                  new List<Object>{
                       new { value = "private" , text = "Private Stream"  },
                       new { value = "public" , text = "Public Stream"  },
                       new { value = "Unlisted" , text = "Unlisted Stream"  }
                    },
                  "value",
                  "text",
                   2))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StreamSnippetTitle, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StreamSnippetTitle)
                @Html.ValidationMessageFor(model => model.StreamSnippetTitle)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StreamCDNFormat, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StreamCDNFormat, new SelectList(
                  new List<Object>{
                       new { value = "1080p" , text = "1080p"  },
                       new { value = "720p" , text = "720p"  },
                       new { value = "480p" , text = "480p"  },
                       new { value = "360p" , text = "360p"  },
                       new { value = "240p" , text = "240p"  }
                    },
                  "value",
                  "text",
                   2))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
