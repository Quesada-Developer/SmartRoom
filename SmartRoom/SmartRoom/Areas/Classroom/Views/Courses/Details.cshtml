@model SmartRoom.Web.App_Start.Course

@{
    ViewBag.Title = "Details";
}

@* This are is viewed by all users. *@

<div id="alert_placeholder"></div>
<div class="row">
    <div class="col-sm-12 pull-left">
        @Html.Partial("Partial/_CourseMenu", Model.UserRelationships.Where(x => x.AccountId.Equals(User.Identity.GetUserId())))

    </div>
</div>
<hr />
<div class="form-overflow">
<div class="row">
    <div class="col-sm-6">
        <h2 title="@Html.DisplayNameFor(model => model.Title)">@Html.DisplayFor(model => model.Title)</h2>
        <h4 title="@Html.DisplayNameFor(model => model.Subject) : @Html.DisplayNameFor(model => model.CourseNumber)">@Html.DisplayFor(model => model.Subject) @Html.DisplayFor(model => model.CourseNumber)</h4>


    </div>
    <div class="col-sm-6">
            <!--col-sm-6-->
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Term)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Term)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Location)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Location)
            </dd>
        </dl>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.StartDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StartDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.EndDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EndDate)
            </dd>
        </dl>
    </div>
</div>
</div>
<hr />
<div class="form-horizontal">
    <h2 title="Announcements">Announcements</h2>
    @{List<SmartRoom.Web.App_Start.Announcement> list = Model.Announcements.Where(x => x.PublishOn >= DateTime.Now).OrderBy(x => x.PublishOn).Take(7).ToList();}
    @for (int i = 0; i < list.Count(); i++)
    {
        @Html.DisplayFor(model => list[i].PublishOn); <text> - </text>
        @Html.DisplayFor(model => list[i].NewsTitle);<br />

        @Html.DisplayFor(mode => list[i].NewsText);<br />
    }
<a href="@Url.Action("Index", "Announcements", new { area = "Forms", id = Model.Id })">
    <div>View All</div>
</a>
</div>
<hr />
<div class="form-horizontal">
<div class="row">
        <center><img src="~/Content/images/YouTube-icon-full_color.png" width="100" />Add link to the closest valid stream link.</center>
</div>
</div>
<hr />
@if (Model.UserRelationships.Any(obj => obj.AccountId.Equals(User.Identity.GetUserId()) && obj.AccountRole == SmartRoom.Web.Helpers.CourseRole.owner))
{

            <div>
        <h3>
            <a href="@Url.Action("Create", "YouTube", new { area = "YouTube", id = Model.Id })">
                <div class="ui-state-default class-container">
                    <center>
                        CREATE A NEW STREAM
                    </center>
            </div>
        </a>
        </h3>
        <h3>
        <a href="@Url.Action("Create", "Announcements", new { area = "Forms", id = Model.Id })">
                <div class="ui-state-default class-container">
                    <center>
                        CREATE AN ANNOUNCEMENT
                    </center>
            </div>
        </a>
        </h3>
        <h3>
        <a href="@Url.Action("Create","Syllabus",new{area="Forms",id = Model.Id})">
                <div class="ui-state-default class-container">
                    <center>
                        CREATE/ADD A SYLLABUS [TO DO]
                    </center>
            </div>
        </a>
        </h3>
    </div>

}
<hr />

@if (Model.UserRelationships.Any(obj => obj.AccountId.Equals(User.Identity.GetUserId()) && obj.AccountRole == SmartRoom.Web.Helpers.CourseRole.owner))
{
    @* This Section is viewed by admins only. *@
    <div class="form-horizontal">
    <div class="row">
        <div class="col-sm-12">

            @Html.Hidden("CourseId", Model.Id)
            <div id="UserSection">
                @Html.Partial("Partial/_UserRelationships", Model.UserRelationships.Where(obj => obj.IsActive))
            </div>
                <hr />
            <dl class="dl-horizontal">

                <dt>
                    @Html.DisplayNameFor(model => model.RegistrationCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.RegistrationCode)
                </dd>

            </dl>
            @Html.ActionLink("Edit Course", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-sm", @style = "margin:10px;" })
            @Html.Partial("Partial/_AddUserRelationships", new SmartRoom.Web.Areas.Classroom.Models.AddUserToCourse() { CourseId = Model.Id })

        </div>

    </div>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            $("form").submit(function () { // you can use any selector that match your form
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize()
                }).done(function (data) {
                    $('#AddUser').modal('hide');
                    UpdateUsers();
                    $('#alert_placeholder').html('<div class="alert alert-success" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' + data + '</div>')
                })
                .fail(function (jqXHR, textStatus) {
                    $('#alert_placeholder_adduser').html('<div class="alert alert-danger" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' + jqXHR.responseText + '</div>')
                })
                ;
                $('#alert_placeholder').html('<div class="alert alert-danger" role="alert">error</div>')
                return false; // prevent the form submission
            });
        });

        function UpdateUsers() {
            var xmlhttp;
            if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp = new XMLHttpRequest();
            }
            else {// code for IE6, IE5
                xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    document.getElementById("UserSection").innerHTML = xmlhttp.responseText;
                }
            }
            xmlhttp.open("GET", "../GetUsers/?CourseId=" + $("#CourseId").val(), true);
            xmlhttp.send();
        }
    </script>
}