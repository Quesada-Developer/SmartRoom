@model SmartRoom.Web.App_Start.Course

@{
    ViewBag.Title = "Details";
}

@* This are is viewed by all users. *@

<div id="alert_placeholder"></div>
<div class="row">
    <div class="col-sm-4 pull-left">
        @Html.Partial("Partial/_CourseMenu", Model.UserRelationships.Where(x => x.AccountId.Equals(User.Identity.GetUserId())))

    </div>
</div>
<hr class="course-hr" />
<div class="row">
    <div class="form">
        <div class="class-container">
            <div class="col-sm-6">
                <h2 title="@Html.DisplayNameFor(model => model.Title)">@Html.DisplayFor(model => model.Subject) @Html.DisplayFor(model => model.CourseNumber)<text>: </text>@Html.DisplayFor(model => model.Title)</h2>
                @{string professor = Model.UserRelationships.Where(x => x.AccountRole == SmartRoom.Web.Helpers.CourseRole.owner).Select(x => x.Account.UserName).First();}
                <h4>
                    @professor
            </h4>


        </div>
        <div class="col-left">
            <!--col-sm-6-->
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Term)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Term)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Location)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location)
                </dd>
            </dl>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.StartDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.StartDate)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EndDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EndDate)
                </dd>
            </dl>
        </div>
    </div>
</div>
</div>
<hr class="course-hr" />

@{List<SmartRoom.Web.App_Start.Announcement> announcementList = Model.Announcements.Where(x => x.PublishOn >= DateTime.Now).OrderBy(x => x.PublishOn).Take(7).ToList();}
@if (announcementList.Count() > 0)
{
    <div class="form-horizontal">
        <h2 title="Announcements">Announcements</h2>

        @for (int i = 0; i < announcementList.Count(); i++)
        {
            @Html.DisplayFor(model => announcementList[i].PublishOn); <text> - </text>
            @Html.DisplayFor(model => announcementList[i].NewsTitle);<br />

            @Html.DisplayFor(mode => announcementList[i].NewsText);<br />
        }
        <a href="@Url.Action("Index", "Announcements", new { area = "Forms", id = Model.Id })">
            <div>View All</div>
        </a>
    </div>
    <hr class="course-hr" />
}
@{SmartRoom.Web.App_Start.YoutubeLiveDetail nextStream = Model.YoutubeLiveDetails.Where(x => x.BroadcastScheduledStartTime.Day >= DateTime.Now.Day).OrderBy(x => x.BroadcastScheduledStartTime).FirstOrDefault();}
@if (nextStream != null)
{ 
<div class="row">
    <a href="@Url.Action("Details", "YouTube", new { area = "YouTube", id = nextStream.Id})">
        <div class="class-container">
            <img src="~/Content/images/YouTube-icon-full_color.png" width="100" />Next Stream
        </div>
        </a>
</div>
}
    @{SmartRoom.Web.App_Start.CoursePlaylist nextPlaylist = Model.CoursePlaylist.Where(x => x.CourseId == Model.Id).FirstOrDefault();}
    @if (nextPlaylist != null)
{
        <div class="row">
            <a href="@Url.Action("Details", "CoursePlaylists", new { area = "YouTube", id = nextPlaylist.CoursePlaylistId })">
                <div class="class-container">
                    <img src="~/Content/images/YouTube-icon-full_color.png" width="100" />Next Playlist
                </div>
            </a>
        </div>
    }
    <hr class="course-hr" />

@if (Model.UserRelationships.Any(obj => obj.AccountId.Equals(User.Identity.GetUserId()) && obj.AccountRole == SmartRoom.Web.Helpers.CourseRole.owner))
{

    <div class="row">
        <a href="@Url.Action("Create", "YouTube", new { area = "YouTube", id = Model.Id })">
            <div class="class-container">
                <h3>
                    CREATE A NEW STREAM
                </h3>

            </div>
        </a>
        <a href="@Url.Action("Create", "Announcements", new { area = "Forms", id = Model.Id })">
            <div class="class-container">
                <h3>
                    CREATE AN ANNOUNCEMENT
                </h3>
            </div>
        </a>
        <a href="@Url.Action("Create","Syllabus",new{area="Forms",id = Model.Id})">
            <div class="class-container">
                <h3>
                    CREATE/ADD A SYLLABUS [TO DO]
                </h3>
            </div>
        </a>
    </div>

}
<hr class="course-hr" />

@if (Model.UserRelationships.Any(obj => obj.AccountId.Equals(User.Identity.GetUserId()) && obj.AccountRole == SmartRoom.Web.Helpers.CourseRole.owner))
{
    @* This Section is viewed by admins only. *@
    <div class="row">
        <div class="form">
            <div class="class-container">
                <div class="col-sm-12">
                    @Html.Hidden("CourseId", Model.Id)
                    <div id="UserSection">
                        @Html.Partial("Partial/_UserRelationships", Model.UserRelationships.Where(obj => obj.IsActive))
                        @Html.Partial("Partial/_AddUserRelationships", new SmartRoom.Web.Areas.Classroom.Models.AddUserToCourse() { CourseId = Model.Id })
                    </div>
                    <hr class="course-hr" />
                    <dl class="dl-horizontal">

                        <dt>
                            @Html.DisplayNameFor(model => model.RegistrationCode)
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.RegistrationCode)
                        </dd>

                    </dl>
                    @Html.ActionLink("Edit Course", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-sm", @style = "margin:10px;" })
                    @*@Html.Partial("Partial/_AddUserRelationships", new SmartRoom.Web.Areas.Classroom.Models.AddUserToCourse() { CourseId = Model.Id })*@

                </div>
            </div>
        </div>
    </div>
}

<script>
    function UpdateUsers() {
        var xmlhttp;
        if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp = new XMLHttpRequest();
        }
        else {// code for IE6, IE5
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                document.getElementById("UserSection").innerHTML = xmlhttp.responseText;
            }
        }
        xmlhttp.open("GET", "../GetUsers/?CourseId=" + $("#CourseId").val(), true);
        xmlhttp.send();
    }
</script>
